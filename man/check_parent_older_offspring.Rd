% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pedigree_consistency_checks_tbl_df.R
\name{check_parent_older_offspring}
\alias{check_parent_older_offspring}
\title{Check that parents are older than their offspring}
\usage{
check_parent_older_offspring(ptbl_pedigree,
                                    pn_offspring_col,
                                    pn_birthday_col,
                                    pn_parent_col,
                                    pn_date_diff_tol)
}
\arguments{
\item{ptbl_pedigree}{pedigree in tbl_df format}

\item{pn_offspring_col}{column index for offspring}

\item{pn_birthday_col}{column index for birthdates of offspring}

\item{pn_parent_col}{column index for parents}

\item{pn_date_diff_tol}{minimum difference between birthdates of parents and offspring}
}
\value{
tbl_df of pedigree records not fullfilling requirements
}
\description{
Given a pedigree in tbl_df format, all parents that are also
present as animals are filtered, if they are not older than
their offspring.
}
\details{
From the given pedigree in ptbl_pedigree, the three columns
containing animal-Id, birthdate and a parent-id where parent
can either be mother or father are extracted using `dplyr::select`.
The selected columns are given new names for easier readability
of the remaining code. In case the birthdates are formatted as
characters, they are converted into integers. From the original
set of pedigree records, all parents are selected into a separate
tbl_df. Their birthdate is searched using a `dplyr::inner_join()`
back to the orginal pedigree records. Once the birthdates for the
parents are found we can filter those out which have a birthdate
which is closer to the birthdate of the offspring than a given
tolerance value.
}
\examples{
s_data_file <- system.file(file.path("extdata","KLDAT_20170524_10000.txt"),
                           package = "PedigreeFromTvdData")
tbl_ped <- PedigreeFromTvdData::laf_open_fwf_tvd_input(ps_input_file = s_data_file)
l_tvd_id_col_dsch <- PedigreeFromTvdData::getTvdIdColsDsch()
n_bd_col_idx <- PedigreeFromTvdData::getBirthdateColIdxDsch()
PedigreeFromTvdData::check_parent_older_offspring(ptbl_pedigree = tbl_ped,
                                                  pn_offspring_col = l_tvd_id_col_dsch$TierIdCol,
                                                  pn_birthday_col = n_bd_col_idx,
                                                  pn_parent_col = l_tvd_id_col_dsch$MutterIdCol)

}
